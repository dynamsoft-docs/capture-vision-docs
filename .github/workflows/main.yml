# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: 
    - main 
    - preview 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains jobs called "Build-Main" and "Build-Preview"
  Build-Main:
    if: ${{ github.ref == 'refs/heads/main' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site
        run: |
          cd /home/ubuntu
          [ ! -d DCVDocCore ] && mkdir -p DCVDocCore
          [ ! -d capture-vision-docs ] && git clone --depth 1 https://github.com/dynamsoft-docs/capture-vision-docs.git capture-vision-docs
          [ ! -d Docs-Template-Repo-DCV2 ] && git clone --depth 1 --branch jenny-preview-branch https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-DCV2
          cd capture-vision-docs && git pull && cd .. && cp -rfp ./capture-vision-docs/* ./DCVDocCore/
          cd Docs-Template-Repo-DCV2 && git pull && cd .. && cp -rfp ./Docs-Template-Repo-DCV2/* ./DCVDocCore/
          cd DCVDocCore && bundle exec jekyll build --incremental
          python3 /home/ubuntu/ftp.py /home/ubuntu/DCVDocCore/_site/ ./www.dynamsoft.com/capture-vision/docs/core/ prod

  Build-Preview:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site
        run: |
          cd /home/ubuntu
          [ -d DCVDocCorePreview ] && rm -rf DCVDocCorePreview
          [ -d capture-vision-docs-preview ] && rm -rf capture-vision-docs-preview
          [ -d Docs-Template-Repo-Preview-DCV2 ] && rm -rf Docs-Template-Repo-Preview-DCV2
          [ ! -d DCVDocCorePreview ] && mkdir -p DCVDocCorePreview
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/capture-vision-docs.git capture-vision-docs-preview
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview-DCV2
          cp -rfp ./capture-vision-docs-preview/* ./DCVDocCorePreview/
          cp -rfp ./Docs-Template-Repo-Preview-DCV2/* ./DCVDocCorePreview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DCVDocCorePreview/_config.yml
          cd DCVDocCorePreview && bundle exec jekyll build --incremental


      - name: Sync files to Test Env
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DCVDocCorePreview/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/core/
